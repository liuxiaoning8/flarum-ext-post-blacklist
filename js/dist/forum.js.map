{"version":3,"sources":["webpack://@xmugenx/flarum-ext-auth-line/webpack/bootstrap","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['app']\"","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['extend']\"","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['Model']\"","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['components/Post']\"","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['utils/PostControls']\"","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['components/Button']\"","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@xmugenx/flarum-ext-auth-line/external \"flarum.core.compat['models/Discussion']\"","webpack://@xmugenx/flarum-ext-auth-line/./src/forum/index.js","webpack://@xmugenx/flarum-ext-auth-line/./src/forum/addBlacklistToDiscussionList.js","webpack://@xmugenx/flarum-ext-auth-line/./src/forum/addBlacklistToPost.js","webpack://@xmugenx/flarum-ext-auth-line/./src/forum/addBlacklistControl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","app","initializers","add","store","models","posts","isBlacklisted","Model","attribute","canBlacklist","discussions","extend","DiscussionListItem","attrs","discussion","this","props","user","session","className","Post","post","PostControls","items","Button","component","children","translator","trans","icon","onclick","blacklistAction","save","then","redraw"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Post'];","module.exports = flarum.core.compat['utils/PostControls'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['models/Discussion'];","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Post from 'flarum/components/Post';\nimport Discussion from 'flarum/models/Discussion';\n\nimport addBlacklistControl from \"./addBlacklistControl\";\nimport addBlacklistToDiscussionList from \"./addBlacklistToDiscussionList\";\nimport addBlacklistToPost from \"./addBlacklistToPost\";\n\napp.initializers.add('xmugenx-post-blacklist', function() {\n\n  app.store.models.posts.prototype.isBlacklisted = Model.attribute('isBlacklisted');\n  app.store.models.posts.prototype.canBlacklist = Model.attribute('canBlacklist');\n  app.store.models.discussions.prototype.isBlacklisted = Model.attribute('isBlacklisted');\n  app.store.models.discussions.prototype.canBlacklist = Model.attribute('canBlacklist');\n\n  addBlacklistToDiscussionList();\n  addBlacklistToPost();\n  addBlacklistControl();\n});\n\n","import { extend } from 'flarum/extend';\nimport DiscussionListItem from 'flarum/components/DiscussionListItem';\n\nexport default function addBlacklistToDiscussionList() {\n  extend(DiscussionListItem.prototype, 'attrs', function(attrs) {\n    let discussion = this.props.discussion;\n    if (discussion.isBlacklisted() && discussion.user() !== app.session.user) {\n      attrs.className += ' Discussion--isBlacklisted';\n    }\n    if (discussion.isBlacklisted() && discussion.canBlacklist()) {\n      attrs.className += ' Discussion--isBlacklisted Discussion--canBlacklisted';\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport Post from 'flarum/components/Post';\n\nexport default function addBlacklistToPost() {\n  extend(Post.prototype, 'attrs', function(attrs) {\n    let post = this.props.post;\n    if (post.isBlacklisted() && post.user() !== app.session.user) {\n      attrs.className += ' Post--isBlacklisted';\n    }\n    if (post.isBlacklisted() && post.canBlacklist()) {\n      attrs.className += ' Post--isBlacklisted Post--canBlacklist';\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport app from 'flarum/app';\nimport PostControls from 'flarum/utils/PostControls';\nimport Button from 'flarum/components/Button';\n\nexport default function addBlacklistControl() {\n  extend(PostControls, 'destructiveControls', function(items, post) {\n    if (post.canBlacklist()) {\n      items.add('unblacklist', Button.component({\n        children: app.translator.trans(post.isBlacklisted() ? 'xmugenx-post-blacklist.forum.post_controls.unblacklist_button' : 'xmugenx-post-blacklist.forum.post_controls.blacklist_button'),\n        icon: 'fas fa-clipboard-list',\n        onclick: this.blacklistAction.bind(post)\n      }));\n    }\n  });\n\n  PostControls.blacklistAction = function() {\n    this.save({isBlacklisted: !this.isBlacklisted()}).then(() => {\n\n      m.redraw();\n    });\n  };\n}\n"],"sourceRoot":""}